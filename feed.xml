<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Ortho lab logs!!</title>
    <link href="https://chrischrislolo.github.io/orthoLabLogs/feed.xml" rel="self" />
    <link href="https://chrischrislolo.github.io/orthoLabLogs" />
    <updated>2024-01-28T21:09:06-06:00</updated>
    <author>
        <name>sporewoh</name>
    </author>
    <id>https://chrischrislolo.github.io/orthoLabLogs</id>

    <entry>
        <title>pusheenz40 (how I found the perfect SMD key switch)</title>
        <author>
            <name>sporewoh</name>
        </author>
        <link href="https://chrischrislolo.github.io/orthoLabLogs/pusheenz40.html"/>
        <id>https://chrischrislolo.github.io/orthoLabLogs/pusheenz40.html</id>
        <media:content url="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20240128_191510082-2.jpg" medium="image" />
            <category term="keyboard"/>

        <updated>2024-01-28T21:09:06-06:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20240128_191510082-2.jpg" alt="" />
                    Purpose: Talk about my latest keyboard, the pusheenz40, as well as the SMD switches it uses. Addtionally cover the design process to make keycaps for the SMD switches. My last pocket keyboard, the modkipz40, was a board that I was fairly satisfied with. It was&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20240128_191510082-2.jpg" class="type:primaryImage" alt="" /></p>
                <figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20240128_191510082.jpg" alt="Picture of the pusheenz40" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240128_191510082-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240128_191510082-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240128_191510082-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240128_191510082-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240128_191510082-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240128_191510082-2xl.jpg 1600w"></figure>
<h2>Purpose:</h2>
<p>Talk about my latest keyboard, the pusheenz40, as well as the SMD switches it uses. Addtionally cover the design process to make keycaps for the SMD switches.</p>
<h2>Problem:</h2>
<p>My last pocket keyboard, the <a href="https://chrischrislolo.github.io/orthoLabLogs/modkipz40-how-i-used-ergogen-for-the-first-time.html" target="_blank" rel="noopener noreferrer">modkipz40</a>, was a board that I was fairly satisfied with. It was both pretty comfortable on my wrists, and looked pretty decent as well. However, it still had a minor pain point of the kailh mute switches I was using. The switches were a bit tricky to type on given their small size, and a bit uncomfortable to type on as well for prolonged periods of time. It also made the board a tad bit thicker than I thought it could be.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20240129_0155080381.jpg" alt="modkipz40 image" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240129_0155080381-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240129_0155080381-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240129_0155080381-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240129_0155080381-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240129_0155080381-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20240129_0155080381-2xl.jpg 1600w"></figure>
<p>Ideally, I could make something that was a bit thinner and a bit more confortable to use. Initially, the idea of having the keyboard just consist of a pcb and be the thickness of a credit card also excited me.</p>
<h2>Solution:</h2>
<p>When browsing for potential mouse switches to use for my pocket boards, I stumbled upon the panasonic EVQP0N02B, an SMD switch that was used in some Microsoft and Xiaomi mice.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/20230203_PANASONIC-EVQP0N02B_C713479_front.jpg" alt="" width="900" height="900" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20230203_PANASONIC-EVQP0N02B_C713479_front-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20230203_PANASONIC-EVQP0N02B_C713479_front-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20230203_PANASONIC-EVQP0N02B_C713479_front-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20230203_PANASONIC-EVQP0N02B_C713479_front-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20230203_PANASONIC-EVQP0N02B_C713479_front-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20230203_PANASONIC-EVQP0N02B_C713479_front-2xl.jpg 1600w"></figure>
<p>This switch really interested me because it was low profile, SMD, and available on LCSC. It being low profile meant I could have a board that was ultra thin as the switches would no longer be the limiting factor. It being SMD meant that I also didn't have to worry about the pokey through hole bits, which take up vertical space (and also opens the door to having, say, a lipo battery on the other side of the pcb). It being on LCSC meant I could hypothetically have a "zero-assembly" keyboard since it could just be assembled for me through JLCPCB. This biggest downside on paper was that the durablility rating for these switches was only 1 milion actuations, which is 2 million less than what's stated for kailh mute switches. I still thought that 1 million was both considerably more than other tactile switches, and should be sufficient for the sake of this keyboard, assuming the lifetime of this board goes down to maybe a couple of years of frequent use.</p>
<p>I basically took the modkipz40 pcb, swapped in the smd footprint in, and sent the order off to JLCPCB. This meant the keyboard would still be using the awesome STM32F072C8Tx MCU</p>
<h2>Initial Thoughts:</h2>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20231229_164239394.jpg" alt="a pusheenz40 pcb" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231229_164239394-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231229_164239394-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231229_164239394-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231229_164239394-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231229_164239394-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231229_164239394-2xl.jpg 1600w"></figure>
<p>I was pretty excited when the pcb came in! I added a topology graphic to the pcb's silkscreen, and I thought it looked pretty nice! I was exited to try the keyboard pcb as-is, in the hope of having an ultra flat creditcard thickness board. However, I got pretty disappointed when trying to type on the board. I got roughly words per minute in the 30s in monkeytype, which was less than half then that of what I get with the modkipz40. Worse yet, the thumb keys <em>hurt</em> like crazy, since my thumbs ended up jamming into the sharp metal corners of the switches more often than not. It was clear to me that as-is, this board wouldn't be viable, and that I would have to add some sort of keycap to make typing on this possible</p>
<h2>Developing custom keycaps:</h2>
<p>In my initial attempts of the <a href="https://chrischrislolo.github.io/orthoLabLogs/bunchiez40-how-i-built-a-keyboard-using-mouse-switches.html" target="_blank" rel="noopener noreferrer">bunchiez40</a> and <a href="https://chrischrislolo.github.io/orthoLabLogs/modkipz40-how-i-used-ergogen-for-the-first-time.html" target="_blank" rel="noopener noreferrer">modkipz40</a>, I had tried to make my own 3D printed buttons to go ontop of of the kailh buttons. The biggest issue by far is that these switches have no keycap stem, so there's no easy way of attaching any form of keycap onto the switche. Other big issues was that it was really difficult coming up with a design that was easily 3D printable, and reliable. I had several iterations of switches that were joined together to the keyboard case, and used some form of compliant mechanism as a means of movement. All iterations ended up failing for several reasons, some of them being that they introduced too much height to the board, or because they were near impossible to produce well. I ended up abandoning the idea in favour of typing on the kailh switches directly.</p>
<p>During my research process, I wanted to figure out how a kailh mute switch acutally worked, and tore one down.</p>
<figure class="post__image" ><img loading="lazy" src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20231016_232356702.jpg" alt="clipped kailh mute switche" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232356702-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232356702-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232356702-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232356702-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232356702-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232356702-2xl.jpg 1600w">
<figcaption >Kailh switch that I clipped to tear open. RIP 2023-2023</figcaption>
</figure>
<figure class="post__image" ><img loading="lazy" src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20231016_232134804.jpg" alt="" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232134804-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232134804-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232134804-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232134804-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232134804-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232134804-2xl.jpg 1600w">
<figcaption >Red slider slides along the rails of the bottom housing</figcaption>
</figure>
<figure class="post__image" ><img loading="lazy" src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/PXL_20231016_232602493.jpg" alt="" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232602493-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232602493-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232602493-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232602493-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232602493-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/PXL_20231016_232602493-2xl.jpg 1600w">
<figcaption >In order: the connective leads and bottom housing, the metal button disc, the grey membrance, the black top housing, and the red cap</figcaption>
</figure>
<p>The teardown proved to be exceptionally informative, since it broke down what was required for a switch of this size. As seen in the third picture, the red "cap" has a sliding piece sticking out that slides along the rails of the grey body, and is held in place by the black top case. The red cap can depress the grey silicon membrane, which can cause the metal disc to collapse in to make an connection with the two metal leads. These components are very similar to that of the joycon buttons as well.</p>
<p>The most interesting observation in my mind was that the SMD buttons I had effectively act as the bottom 3 components of the switch. If I designed and added my own caps and top housing, then I'd effectively have my own "complete switch" that should be much easier to type on. The best part is that if I make the cap and top housing myself, I can tweak it to my liking, and tune it's size and height to my hearts content.</p>
<p>I used ergogen to make a new case for my board. Most notably, I added in "slider rails" to my cases integrated plate, so that the entire top plate could act as a slider and a top housing for my switches. From there I made caps similar to that of the kailh mute switch: generally cylindrical with knubs on each end that could fit into the sliders.</p>
<figure class="post__image" ><img loading="lazy" src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/Screenshot-2024-01-28-at-8.41.19-PM.png" alt="" width="1602" height="1051" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2024-01-28-at-8.41.19-PM-xs.png 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2024-01-28-at-8.41.19-PM-sm.png 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2024-01-28-at-8.41.19-PM-md.png 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2024-01-28-at-8.41.19-PM-lg.png 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2024-01-28-at-8.41.19-PM-xl.png 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2024-01-28-at-8.41.19-PM-2xl.png 1600w">
<figcaption >Case. Note the rails for each of the key holes.</figcaption>
</figure>
<h2>Results:</h2>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/20240128_131943.jpg" alt="" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20240128_131943-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20240128_131943-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20240128_131943-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20240128_131943-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20240128_131943-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/20240128_131943-2xl.jpg 1600w"></figure>
<p>After several iterations of refining the tolerances, such that the keycaps were neither sticky nor needlessly wobbly, I was able to make something I'm very happy with! I had to use the finest settings on my P1S 3D printer, but I was able to make something that was both very comfortable and relatively easy to type on! My fingertips no longer hurt and my wpm was able to spring back to to 80+ wpm. I was even able to get 100+ wpm on this board.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/Screenshot-2023-12-27-at-11.32.16-AM.png" alt="my monkeytype wpm of 100 :)" width="913" height="668" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2023-12-27-at-11.32.16-AM-xs.png 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2023-12-27-at-11.32.16-AM-sm.png 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2023-12-27-at-11.32.16-AM-md.png 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2023-12-27-at-11.32.16-AM-lg.png 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2023-12-27-at-11.32.16-AM-xl.png 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/8/responsive/Screenshot-2023-12-27-at-11.32.16-AM-2xl.png 1600w"></figure>
<p>The screenshot itself isn't definitive proof for a skeptic, but you'll have to take my word on this one until I do a proper typing test :). I hope the image atleast is illustrative that typing on this board is viable for daily driving.</p>
<p>The board is also super thin at around 8mm. In fact, it might almost be <em>too</em> thin given that a small part of my wrist bone rubs against my desk a bit. Not enough to cause carpel tunnel strain, but enough that I wouldn't mind if I went a couple millimeters higher.</p>
<h2>Future Plans:</h2>
<p>I think the idea of SMD switches is really exciting, since it opens up a <em>ton</em> of real estate on a pcb, and can reduce a lot of work required assembling a board, since it can mean that no soldering is required. The two most interesting projects that could result from this is either a board with a lipo at the back of it, or a board that's cheap and easy to produce and distribute.</p>
<h2>Acknowledgments:</h2>
<p>Huge thank you to BeeKeeb, TALPKEYBOARD, and kurihara for sponsoring me on <a href="https://github.com/ChrisChrisLoLo">Github</a> and <a href="https://ko-fi.com/sporewoh">ko-fi</a>!! These fun experimental builds wouldn't be possible without your generous support, and let me keep pushing the boundaries of keyboard design. If you found this project interesting or informative, or like to see me make more projects similar to this, please consider supporting me on Github or ko-fi!</p>
<h2> </h2>
            ]]>
        </content>
    </entry>
    <entry>
        <title>modkipz40 (how I used ergogen for the first time)</title>
        <author>
            <name>sporewoh</name>
        </author>
        <link href="https://chrischrislolo.github.io/orthoLabLogs/modkipz40-how-i-used-ergogen-for-the-first-time.html"/>
        <id>https://chrischrislolo.github.io/orthoLabLogs/modkipz40-how-i-used-ergogen-for-the-first-time.html</id>

        <updated>2023-12-19T01:09:20-06:00</updated>
            <summary>
                <![CDATA[
                    Purpose: Discuss how I made the modkipz40, my new "ergonomic" pocket board that uses mouse switches. Talk about my first experience using ergogen, it's advantages and drawbacks, as well how this project shifted my view on keyboard ergonomics. I thoroughly enjoyed making and using my&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/PXL_20231210_225209197.NIGHT.jpg" alt="" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_225209197.NIGHT-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_225209197.NIGHT-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_225209197.NIGHT-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_225209197.NIGHT-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_225209197.NIGHT-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_225209197.NIGHT-2xl.jpg 1600w"></figure>
<h2>Purpose:</h2>
<p>Discuss how I made the modkipz40, my new "ergonomic" pocket board that uses mouse switches. Talk about my first experience using ergogen, it's advantages and drawbacks, as well how this project shifted my view on keyboard ergonomics.</p>
<h2>Problem:</h2>
<p>I thoroughly enjoyed making and using my <a href="https://chrischrislolo.github.io/orthoLabLogs/bunchiez40-how-i-built-a-keyboard-using-mouse-switches.html">bunchiez40</a> keyboard, which was the first board of mine to use mouse switches (that is, the buttons that you can find in computer mice). I like this kind of board so much that I've come up with a new term for its kind: pocket board.</p>
<p>However, one of the biggest issues with the board for me was its tight key spacing. Ironically, the issue though was not with typing speed, but rather the ulnar deviation that occurred when I was typing on the board. This occurred because I had to move my hands closer together.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/PXL_20231122_0342034091.jpg" alt="" width="3072" height="4080" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231122_0342034091-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231122_0342034091-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231122_0342034091-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231122_0342034091-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231122_0342034091-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231122_0342034091-2xl.jpg 1600w"></figure>
<p>My wrists started to hurt after extended typing sessions, both due to what I think is compression of the ulnar tunnel, as well as compression of the carpal tunnel. I was generally able to over come the carpal tunnel compression by assuming a proper typing form that didn't compress my wrists against the table (along with proper wrist streching before hand). However, my ulnar tunnel still ached considerably, meaning I needed to develop a new pocket board to account for this before I caused any permanent strain and damage to my wrists. </p>
<h2>Solution:</h2>
<p>The solution to reducing ulnar deviation in the keyboard world is generally to angle the the halves of the board such that the hand is relatively parallel with the rest of the arm, such that the wrist doesn't have to deviate much from it's resting position. This would mean I would have to tilt the two haves of the keyboard inwards to reduce any ulnar deviation.</p>
<figure class="post__image"><img loading="lazy"  src="https://samarpanphysioclinic.com/wp-content/uploads/2023/06/radial-_-ulnar-Deviation-1200x1109.webp" alt="Radial And Ulnar Deviation Of The Wrist - Movement, Muscles, ROM" width="414" height="382" aria-hidden="false" data-is-external-image="true"></figure>
<p>The most widely used tool in the community to make boards like this would be Ergogen. Ergogen's biggest strength is that it creates vectors of a keyboards shape based on the YAML fed into it. The YAML configuration allows for ergonomic keyboard shapes, since it's easy to define key spacing, key/column angles, and any offsets desired.</p>
<h2>My experience with Ergogen:</h2>
<p>I had previously tried to use Ergogen to make my first project years ago (specifically for the <a href="https://github.com/ChrisChrisLoLo/youwu36">youwu36</a>). The two biggest issues with it I found though, were that I was trying to use it as a crutch as an alternative to understanding KiCad (as I didn't know how to fully use KiCad at the time), and that I found the <a href="https://docs.ergogen.xyz/">documentation</a> tricky to parse. At time of writing, I still find it hard to understand how certain examples in the docs fit into the larger picture of making a keyboard (it can read more like an API sheet than a guide), and examples in the Outlines section weren't loading altogether.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/Screenshot-2023-12-18-at-12.09.40-AM.png" alt="" width="1028" height="790" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.09.40-AM-xs.png 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.09.40-AM-sm.png 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.09.40-AM-md.png 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.09.40-AM-lg.png 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.09.40-AM-xl.png 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.09.40-AM-2xl.png 1600w"></figure>
<p>Upon revisting Ergogen years later to try to use it for this project, I stumbled upon this <a href="https://flatfootfox.com/ergogen-introduction/">guide</a> by FlatFootFox. I think this guide is awesome, since it nicely structures Ergogen concepts into a logical sequence, provides detailed information on what each snippet of YAML is doing, and most importantly, provides clear holistic examples of what you can do with Ergogen. This is an awesome guide that allowed me to quickly whip up exactly what I wanted in terms of outlines. I was able to generate the shape of the PCB, plate, and case all in a single vector outline.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/Screenshot-2023-12-18-at-12.26.03-AM.png" alt="" width="975" height="612" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.26.03-AM-xs.png 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.26.03-AM-sm.png 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.26.03-AM-md.png 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.26.03-AM-lg.png 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.26.03-AM-xl.png 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.26.03-AM-2xl.png 1600w"></figure>
<p>I used the outline in KiCad by importing the DXF and then setting the outer lines to edgecuts to define the PCB shape. I also used the YAML in conjunction with the <a href="https://github.com/adamws/kicad-kbplacer">kicad-kbplacer</a> plugin to set the switch positions.</p>
<p>To make the case, I used the DXF in Fusion360 by importing the outline file and then selecting the shapes I wanted to extrude. Extruding the shapes allowed me to easily both make the bottom half and top half of the case relatively parametrically.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/Screenshot-2023-12-18-at-12.34.14-AM.png" alt="" width="1502" height="899" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.34.14-AM-xs.png 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.34.14-AM-sm.png 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.34.14-AM-md.png 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.34.14-AM-lg.png 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.34.14-AM-xl.png 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-12.34.14-AM-2xl.png 1600w"></figure>
<p>For KiCad and Fusion, while I am happy with the final result, I do wonder if I can refine the creation process a bit in the future. In KiCad, I had to manually shift the grid of switches onto the PCB, which was time consuming and somewhat imprecise (I understand that Ergogen has an ability to export KiCad files, though I wasn't sure how to get it to easily use the mouse switch footprints I needed to use). For Fusion, the model is only partially parametric; any changes in the Ergogen file meant a new DXF file, which means I would have to redo or reassociate a good chunk of extrusions and steps there after.</p>
<h2>Results:</h2>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/PXL_20231210_224330513.jpg" alt="" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_224330513-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_224330513-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_224330513-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_224330513-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_224330513-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/PXL_20231210_224330513-2xl.jpg 1600w"></figure>
<p>After assembly, I was happy to find that the angled keys significantly improved the comfort of my wrists, even though the rotation angle was at a modest 10 degrees. I can now type all day without any sort of discomfort from my ulnar tunnel. My typing speed has also improved. On a good day I'm now able to type at about ~95 wpm on monkeytype with this board. This is roughly a ~10 wpm gain from the bunchiez40. I'm not entirely sure if this is due to the "ergonomics" of the pocket board, the new huano black mute switches I'm using, or because of the practice I've accumulated typing on these keys. In any case, this board is viable for everyday use, and I don't feel like it's much of a bottleneck in terms of converting my thoughts into keystrokes.</p>
<p>Ultimately I'm very happy I spent the time to learn how to make an ergonomic board. Not only does it give me more creative flexibility to make something comfortable and aesthetically pleasing, but I think with a bit more practice it can potentially speed up my current keyboard design workflow, just due to how easy it is to specify both PCB and case outlines in a single file.</p>
<h2>Future Plans:</h2>
<p>I think this keyboard is comfortable enough for me to daily drive (I'm currently using it to write this blog post), though I still think there can be room for improvement. In particular, I'd like the switches to be lower profile to reduce wrist extension. I'd also like to see if I can reduce the actuation force in an attempt to require less force when typing. The two biggest switches I'd like to experiment with as a resuilt would be the 4.3mm Huano/Kailh mute switch, as well as the Panasonic EVQPO/EVQQ2 SMD light touch switch. </p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/Screenshot-2023-12-18-at-1.10.00-PM-2.png" alt="" width="244" height="153" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-1.10.00-PM-2-xs.png 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-1.10.00-PM-2-sm.png 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-1.10.00-PM-2-md.png 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-1.10.00-PM-2-lg.png 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-1.10.00-PM-2-xl.png 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/5/responsive/Screenshot-2023-12-18-at-1.10.00-PM-2-2xl.png 1600w"></figure>
<p>I think either kind of switch should be slightly more comfortable, and the idea of using SMD switches is exciting, since it means I can put other components on the back of the PCB (such as a battery or the like).</p>
<h2>Conclusion:</h2>
<p>I had a lot of fun making the modkipz40, since it required me to learn basic wrist ergonomics and anatomy, as well as pick up the popular Ergogen tool that all the cool kids are using. There's some sort of irony that my tiny boards forced me to understand and appretiate the basics of keyboard ergonomics. I certainly plan to use Ergogen more for future projects, and I'm excited that there's still room for exploration with my pocket boards.</p>
<h2>Acknowledgments:</h2>
<p>Big thank you to BeeKeeb and kurihara for sponsoring me on <a href="https://github.com/ChrisChrisLoLo">Github</a> and <a href="https://ko-fi.com/sporewoh">ko-fi</a>. Your generous contributions help me to continue to experiment and iterate on weird new board designs like this, and allow me to continue to do what I love. </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>bunchiez40 (how I built a keyboard using mouse switches)</title>
        <author>
            <name>sporewoh</name>
        </author>
        <link href="https://chrischrislolo.github.io/orthoLabLogs/bunchiez40-how-i-built-a-keyboard-using-mouse-switches.html"/>
        <id>https://chrischrislolo.github.io/orthoLabLogs/bunchiez40-how-i-built-a-keyboard-using-mouse-switches.html</id>
            <category term="research"/>
            <category term="keyboard"/>

        <updated>2023-12-18T01:54:09-06:00</updated>
            <summary>
                <![CDATA[
                    Objective: bunchiez40 is my new tiny keyboard that uses unique switches to achieve it's form factor while still making it viable to type 85+ wpm on. In this log, I will discuss my cool new keyboard, how I got to this point, as well as&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/PXL_20231127_0442554541-2.jpg" alt="" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_0442554541-2-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_0442554541-2-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_0442554541-2-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_0442554541-2-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_0442554541-2-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_0442554541-2-2xl.jpg 1600w"></figure>
<h1>Objective:</h1>
<p>bunchiez40 is my new tiny keyboard that uses unique switches to achieve it's form factor while still making it viable to type 85+ wpm on.</p>
<p>In this log, I will discuss my cool new keyboard, how I got to this point, as well as future plans about this new exciting direction.</p>
<h1>Problem:</h1>
<p>I hit a hard limit. Over past year or so, I've been shrinking down the size of my keyboard. What started out as a limitation of the 3D printer bed size has now become an obsession in terms of optimizing simply for the sake of being able to do so. The normal dimensions of a choc spaced swith is 18mm x 17mm. With my bancouver40, I had bumped the spacing down to 17mm x 17mm using CFX keys. With my hampsterz40 (to be publicly released), I further reduced the spacing to 15mm x 15mm using custom designed and printed keycaps.</p>
<figure class="post__image" ><img loading="lazy" src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/PXL_20231111_004551298-2.jpg" alt="" width="3072" height="4080" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231111_004551298-2-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231111_004551298-2-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231111_004551298-2-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231111_004551298-2-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231111_004551298-2-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231111_004551298-2-2xl.jpg 1600w">
<figcaption >Red keyboard is my bancouver40, the white keyboard below that is my hampsterz40</figcaption>
</figure>
<p>However, at this point, I hit the absolute limit I could possibly go in terms shrinking my 4x10 board, since the dimensions of the choc switch (and mx switch for that matter) itself was 15mm x 15mm. Any attempt at going smaller would lead to switch overlap and collisions. I had breifly considered streamlining the key count, but that would lead to a considerably larger spike in terms of usablility of my boards.</p>
<h1>Research:</h1>
<p>In order to get around this physical limit, I considered going a path seldom traveled and use a switch with a smaller footprint. At first all I wanted was something that I "could type on". I've soon come to learn that finding a switch alternative is trickier than that vague criteria alone. When doing initial research on the topic, a friend of mine sent me this article from 40 percent club:<a href="https://www.40percent.club/2016/09/mini-planck.html"> https://www.40percent.club/2016/09/mini-planck.html</a>. The article entails the mini planck 2.0, which along with the pocket type, are the two most notable keyboards that both use a switch smaller than an MX switch, and both make use of tactile switches. The most notable thing about the article was the author's description about the type feel of the keys:</p>
<blockquote>
<p>Metal dome construction. Loud click. Typing on these are horrible. The pressure required for the 180 gram is more than any Cherry switch. The 130 gram is much less. The switch travel is less than 1mm. They would make a nice macro pad or maybe used on a game pad, but not good for touch typing.</p>
</blockquote>
<p>This was very insightful, since I took the actuation force of the switch for granted. The article also notes switch lifecycle, a metric almost never mentioned by switch manufacturers since it's generally a given that the switch lifespan will be around the 50 million actuation mark. It also gave me the impression that these kinds of boards are mostly novelty, and have very little chance of being used for even a day.</p>
<p>When I did the rounds on LCSC, Aliexpress, and mouser to do some microswitch shopping, I found that almost every microswitch out there was generally awful as a key substitutes. Almost all of them had actuation forces in the 120-180 grams of force range (a standard mx switch is roughly 60-70). Most of them also had a paltry ~100,000 actuation lifetime, which was a tiny fraction to the 50 million that MX switches reportedly have. I gained an appretiation for the MX switch design, since it became very clear that a very large amount of work had to be spent to make a button/switch that was both comfortable to type on, as well as durable enough to be typed on.</p>
<p>With that frame of mind, I conjured up thoughts of what other switches have similar uses to keyboard switches, and would hopefully have similar lifetimes and actuation forces. It finally dawned on me that mouse switches would be somewhat analogous to keyboard switches. After some digging around, I stumbled upon the kailh/huano mute mouse switch. The huano pink switch specifically reportedly has a lifetime of 10 million actuations, and has an actuation force of 70+-10g, both of which are relatively similar to an MX switch. I plan to do a second write up on the silent mouse switch variants, since I find them both interesting as well as very obtuse in terms of documentation.</p>
<h1>Experiment:</h1>
<p>I quickly whipped up a 4x10 board that made use of these mouse switches. I decided to space the keys apart so that the spacing was 10mm x 10mm, since it felt like my fingers could fit within that space with a quick caliper test. Since this was a fairly risky design, I opted to use a waveshare rp2040 board that I could easily hand solder on. I tossed on an OLED since I thought it would be fun to make use of the real estate used up by the rp2040 board. The spacing also gave my hands a tiny bit of breathing room.</p>
<p>I hoped with the choice of switch and keyspacing allowed me to create a board that viable to type on using two hands.</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/PXL_20231105_230039555.jpg" alt="" width="3072" height="4080" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231105_230039555-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231105_230039555-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231105_230039555-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231105_230039555-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231105_230039555-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231105_230039555-2xl.jpg 1600w"><figcaption>Assembled pcb of the bunchiez40 (sans OLED)</figcaption></figure>
<h1>Results:</h1>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/PXL_20231122_034203409.jpg" alt="" width="3072" height="4080" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231122_034203409-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231122_034203409-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231122_034203409-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231122_034203409-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231122_034203409-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231122_034203409-2xl.jpg 1600w"></figure>
<p>It works!! Kind of. My rough caliper math wasn't great, and my fingers are closer together than I expected. Additionally it's tricky typing on the raw key itself, since its easier to miss a key. The elephant in the room is ergonomics, which are abysmal. My hands are permanently semi-contracted, and partially strained in order to fit my fingers onto the board. The ulnar deviation is also pretty bad. If I don't sit and rest my wrists exactly as I should, then acute discomfort can appear in my wrists, which usually is a cue for me to take a long break from the board.</p>
<p>Despite this though, I practiced enough to the point where I can get roughly 85-95 wpm on this keyboard, which is only a slightly slower than my usual speed on a choc board. I also developed a typing form that allows me to be able to daily drive this board without (forseeable) discomfort or injury. The keys are also fun to type on in terms of feel. They're both silienced and extremely tactile, giving it a feel similar to an extreme version of a boba U4 switch. The silence also makes it ideal for typing in a quiet public setting (assuming you can type fast enough on it, and be comfortable enough to be seen using it). I find this really exciting since to the best of my knowledge, this board is something novel in terms of it's "viability" and radically small form factor.</p>
<p>I think going forward I want to increase the ergonomics a bit (mostly to just reduce ulnar deviation) and even shrink the design up a tiny bit more. Another thing I'd like to try is low profile mute switches (4.3mm height), since I think those can improve my wrist angle and make it even more comfortable to use for long periods of time.</p>
<p>Ultimately I think I think there's a lot more I can explore here, which has really reinvigorated my enthusiam for making new boards. Up until some point at the middle of this year, it had felt to me that the medium had hit a creative plateau in a way, and it felt like there was nothing I could do that hasn't already been done before in some way shape or form. Now it feels like a whole new world in terms of possibilities and experiments. How can I make this board smaller? More ergonomic? How can I put keys on a switch that has such a tiny semblance of a stem? </p>
<p>This experiment was in my mind a resounding success in terms of making a viable board smaller. As such, I conclude the first revision of my bunchiez40 by making an CNC aluminum case for my board :)</p>
<figure class="post__image"><img loading="lazy"  src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/PXL_20231127_042843419.jpg" alt="" width="4080" height="3072" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_042843419-xs.jpg 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_042843419-sm.jpg 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_042843419-md.jpg 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_042843419-lg.jpg 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_042843419-xl.jpg 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/4/responsive/PXL_20231127_042843419-2xl.jpg 1600w"> </figure>
            ]]>
        </content>
    </entry>
    <entry>
        <title>My thoughts on OpenSCAD &amp; Alternatives, and why CAD as code is cool</title>
        <author>
            <name>sporewoh</name>
        </author>
        <link href="https://chrischrislolo.github.io/orthoLabLogs/my-thoughts-on-openscad-and-why-cad-as-code-is-cool.html"/>
        <id>https://chrischrislolo.github.io/orthoLabLogs/my-thoughts-on-openscad-and-why-cad-as-code-is-cool.html</id>

        <updated>2023-10-29T16:18:22-05:00</updated>
            <summary>
                <![CDATA[
                    Wowowow 3D cool Purpose: This article will talk about my opinions about OpenSCAD, alternatives, and CAD as code as a novice. I want to jot my thoughts down here, but I acknowledge that there's still room for me to find a better solution/workflow than what&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <figure class="post__image" ><img loading="lazy" src="https://chrischrislolo.github.io/orthoLabLogs/media/posts/2/several_grey_utah_teapots_falling_on_an_open_laptop__grassy_hill_background__rendered__computer_graphics__4k_1095699334.png" alt="a bunch of teapots" width="1152" height="768" sizes="100vw" srcset="https://chrischrislolo.github.io/orthoLabLogs/media/posts/2/responsive/several_grey_utah_teapots_falling_on_an_open_laptop__grassy_hill_background__rendered__computer_graphics__4k_1095699334-xs.png 300w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/2/responsive/several_grey_utah_teapots_falling_on_an_open_laptop__grassy_hill_background__rendered__computer_graphics__4k_1095699334-sm.png 480w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/2/responsive/several_grey_utah_teapots_falling_on_an_open_laptop__grassy_hill_background__rendered__computer_graphics__4k_1095699334-md.png 768w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/2/responsive/several_grey_utah_teapots_falling_on_an_open_laptop__grassy_hill_background__rendered__computer_graphics__4k_1095699334-lg.png 1024w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/2/responsive/several_grey_utah_teapots_falling_on_an_open_laptop__grassy_hill_background__rendered__computer_graphics__4k_1095699334-xl.png 1360w ,https://chrischrislolo.github.io/orthoLabLogs/media/posts/2/responsive/several_grey_utah_teapots_falling_on_an_open_laptop__grassy_hill_background__rendered__computer_graphics__4k_1095699334-2xl.png 1600w">
<figcaption >Wowowow 3D cool</figcaption>
</figure>
<p><em>Purpose: This article will talk about my opinions about OpenSCAD, alternatives, and CAD as code as a novice. I want to jot my thoughts down here, but I acknowledge that there's still room for me to find a better solution/workflow than what I currently have.</em></p>
<h2>The allure and drawbacks of OpenSCAD </h2>
<p>Fusion360 is expensive. At $476 - $710 CAD a year, I could buy myself a new 3D printer rather than paying for a year of Fusion360. The monthly price of $90 also doesn't seem very appealing given how often I use CAD for my hobby. I also dislike alternative free cloud solutions since the terms and conditions can and will change if the company needs to increase revenue for the year. The logical conclusion then would be to find and use a free (in cost and in access) alternative.</p>
<p>One option would be to learn and use FreeCAD, though the UI isn't super fun to work with, and there's times where I'd like to express my thoughts code, but am unable to do so. A common example would be creating a grid of objects, easy to represent in a couple of `for` loops, less obvious to do in CAD programs, though this may just be due to lack of familiarity in said programs.</p>
<p>One very alluring option that came up was OpenSCAD, where all aspects of the 3D model are represented in code. While not everything has to be represented as code, I find it particularly useful for the following reasons:</p>
<ul>
<li>It's very easy copying and pasting features across projects</li>
<li>Because you're forced to write everything in code, I find that my projects tend to be more parametric than in fusion, mostly because I don't have the escape hatch of directly modifying my feature.</li>
<li>Coming from a software development background, writing code feels more confortable than finding the right UI/Tools that I need</li>
<li>I make ortholinear keyboard cases in CAD, so the cases tend to be very simple geometrically speaking. Because of this it's very easy representing the keyboards as code</li>
<li>Version control comes for free with git</li>
</ul>
<p>While I like OpenSCAD very much, there's several roadbumps I've had with it that prevent it from being perfect. While I've had some luck in mitigating some roadbumps, there's still points that I'm considering to be near dealbreakers with OpenSCAD.</p>
<ul>
<li>OpenSCAD is famously very slow when there's lots of boolean operations. Without optimization on my end, all of my otholinear board cases have plenty of said boolean operations. By default, it can take a few minutes to render even with my Mac M1 processor.
<ul>
<li>The dev/nightly release of OpenSCAD mostly mitigates against this with fairly good caching and optimization options</li>
</ul>
</li>
<li>OpenSCAD uses the CGAL kernel, which doesn't very easily allow for fillets.
<ul>
<li>It's possible to use `hull` or `minkowski`, but it's quite frustrating having to go out of your way to write code that emulates fillets rather than just tossing on a `fillet` function</li>
<li>One possibility is directly importing the direct OpenSCAD code into FreeCAD, and then adding fillets in that software.
<ul>
<li>Biggest annoyance is occasionally I hit errors trying to import OpenSCAD into FreeCAD</li>
</ul>
</li>
</ul>
</li>
<li>I don't think this is a fair point, but OpenSCAD doesn't have a free option for creating technical drawings easily, which is a bit of a downer for manufacturing
<ul>
<li>I think this can be mitigated by importing the feature into FreeCAD, and then working off of that</li>
</ul>
</li>
<li>The most painful point: OpenSCAD cannot export STEP files directly
<ul>
<li>This means that CNC manufactering + OpenSCAD by default is a no-go</li>
<li>Also possible to try to import the OpenSCAD into FreeCAD, though doing so makes me anxious as there's effectively a risk that the translation fails, and if it fails, it means that all the work you've spent will have been for nothing.</li>
</ul>
</li>
</ul>
<p>While there's potential mitigations for the pitfalls of OpenSCAD, there's enough here to make it a bit cumbersome if you want fillets and/or the ability to CNC objects. For some projects, this is fine, but for keyboard cases, it's harder to want to go down this route.</p>
<h2>CascadeStudio</h2>
<p>Some alternatives I've investigated was CascadeStudio and CADquery.</p>
<p>CascadeStudio on paper is really nice, web browser environment, can export STEP files and easily do fillets thanks to it's underlying OpenCascade Brep kernel. While I personally preferred the declarative nature of OpenSCAD, using JS was fine. It even had cool features like using the VSCode text editor (Monaco) and intellisense.</p>
<p>The biggest issue I found with CascadeStudio is that it's horrible at error handling at all levels. If you accidentally passed in bad inputs (like an empty array) into CascadeStudio, it would bubble up the error message in the library without any context as to what caused the direct error to begin with. On top of this, it was also possible to have the OCCT webassembly fail and return an obtuse long integer error code. Compounded by the fact that there's no runtime type checking, using CascadeStudio eventually crawled to a halt, where each error I got forced me to undo the last three things I did in the hopes of fixing whatever the error was, since it was not remotely clear from the error message what went wrong.</p>
<p>Furthermore performance wasn't very good either. The cache was horrible, since it caused it's fair share of issues itself, and usually had to be disabled to prevent piling onto any debugging mess.</p>
<p>Ultimately while I think CascadeStudio does a lot of things right, I think it's biggest weakness is it's debuggability story. I think some easy wins for it would be adding basic input checking and error surfacing in it's functions. I'm not entirely sure what work would be involved in clarifying the long int errors that the opencascade.js kernel occasionally returns,though.</p>
<h2>CadQuery</h2>
<p>My best and last hope to an OpenSCAD alternative without coming up with external workflows would be CadQuery, a python library that also makes use of the OpenCascade kernel. CadQuery can also export STEP files and do fillets easily thanks to the kernel.</p>
<p>My biggest gripes with CadQuery initially are generally bikeshed-y and opinionated. One gripe is that you need to use conda to install to CadQuery, which can mess up your computer in certain situations. Thankfully there's instructions on how to use mini mamba to avoid this issue. Another issue is that it's purely a python library, which I dislike, because in theory anything you write in CadQuery is now coupled to a CadQuery version AND a python runtime version. Generally I think this shouldn't be too bad if you stick to a generally small subset of python, but it's not something I'm a fan of. The last biggest gripe with CadQuery is it's syntax. While OpenSCAD and CascadeStudio generally had a nice functional syntax and flow to it, CadQuery opts to have a syntax similar to jQuery. From an onlookers point of view, the functions in CadQuery are not very clear as to what they return. CadQuery also seems to have a way of reletive references, so it's possible to perform operations relative to given geometries. I've read that this can both make certain operations relatively nice and very difficult, depending on what needs to be done.</p>
<p>While the above has pushed me away from CadQuery, it is starting to look like potentially the best option of the three I have tried so far, and is something I want to try and hopefully adopt</p>
<h2>Going forward</h2>
<p>For now, I'm committing to trying CadQuery for my next enclosure and seeing how it goes. Ideally I can get past what I hope is superficial gripes with CadQuery and finally have a means of getting CNC ready models from code. If CadQuery gives me greif, the next thing to try might be going ahead with a solid OpenSCAD + FreeCAD workflow, or just begin to use FreeCAD entirely</p>
<p> </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>HELLO WORMHOLE</title>
        <author>
            <name>sporewoh</name>
        </author>
        <link href="https://chrischrislolo.github.io/orthoLabLogs/hello-wormhole.html"/>
        <id>https://chrischrislolo.github.io/orthoLabLogs/hello-wormhole.html</id>

        <updated>2023-10-29T00:23:58-05:00</updated>
            <summary>
                <![CDATA[
                    HELLO!!!!!!!!!!!!!!!!!!!!! This is my test post made with publii. It's very cool as a quick way to whip up blog posts. The current plan is to have all of my keyboard logs/findings/side projects here. Visibility will be low but this is mostly as a way&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>HELLO!!!!!!!!!!!!!!!!!!!!!</p>
<p>This is my test post made with publii. It's very cool as a quick way to whip up blog posts.</p>
<p>The current plan is to have all of my keyboard logs/findings/side projects here. Visibility will be low but this is mostly as a way to keep technical tabs and documentation on what I've been experimenting with. </p>
            ]]>
        </content>
    </entry>
</feed>
